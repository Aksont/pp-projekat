Grammar

    0 $accept: program_DOUBLEDOT $end

    1 program_DOUBLEDOT: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 $@2: %empty

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 variable: _TYPE _ID _SEMICOLON
   13         | json_var
   14         | list_var

   15 json_var: _JSON _ID _SEMICOLON

   16 list_var: _LIST _ID _SEMICOLON

   17 statement_list: %empty
   18               | statement_list statement

   19 statement: compound_statement
   20          | assignment_statement
   21          | if_statement
   22          | return_statement
   23          | inc_statement
   24          | do_while_statement
   25          | for_each_statement
   26          | switch_statement
   27          | for_statement

   28 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

   29 $@3: %empty

   30 inc_statement: _ID $@3 _INC _SEMICOLON

   31 for_each_statement: _FOR_EACH _EACH _ID _IN _ID compound_statement

   32 $@4: %empty

   33 switch_statement: _SWITCH $@4 _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET

   34 case_statements: case_statement
   35                | case_statements case_statement

   36 case_statement: _CASE literal _DOUBLEDOT statement break

   37 break: %empty
   38      | _BREAK _SEMICOLON

   39 default_statement: _DEFAULT _DOUBLEDOT statement

   40 @5: %empty

   41 $@6: %empty

   42 @7: %empty

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

   44 compound_statement: _LBRACKET statement_list break _RBRACKET

   45 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   46                     | json_assignment_statement
   47                     | list_assignment_statement

   48 json_assignment_statement: _ID _ASSIGN _LBRACKET json_content _RBRACKET _SEMICOLON

   49 json_content: %empty
   50             | json_content _ID _DOUBLEDOT literal json_content_ending

   51 json_content_ending: %empty
   52                    | _ZAPETA

   53 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER list_content _RSQUAREBRACKER _SEMICOLON

   54 list_content: literal
   55             | list_content _ZAPETA literal

   56 num_exp: exp
   57        | num_exp _AROP exp

   58 exp: literal
   59    | _ID
   60    | function_call
   61    | _LPAREN num_exp _RPAREN
   62    | _ID _DOT _ID

   63 literal: _INT_NUMBER
   64        | _UINT_NUMBER

   65 $@8: %empty

   66 function_call: _ID $@8 _LPAREN argument _RPAREN

   67 argument: %empty
   68         | num_exp

   69 if_statement: if_part
   70             | if_part _ELSE compound_statement

   71 @9: %empty

   72 $@10: %empty

   73 if_part: _IF _LPAREN @9 rel_exp $@10 _RPAREN compound_statement

   74 rel_exp: num_exp _RELOP num_exp

   75 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 12 43
_IF (259) 73
_ELSE (260) 70
_RETURN (261) 75
_ID (262) 5 7 12 15 16 28 30 31 33 43 45 48 50 53 59 62 66
_INT_NUMBER (263) 63
_UINT_NUMBER (264) 64
_LPAREN (265) 5 28 33 43 61 66 73
_RPAREN (266) 5 28 33 43 61 66 73
_LBRACKET (267) 9 33 43 44 48
_RBRACKET (268) 9 33 43 44 48
_ASSIGN (269) 43 45 48 53
_SEMICOLON (270) 12 15 16 28 30 38 43 45 48 53 75
_AROP (271) 57
_RELOP (272) 28 74
_FOR (273) 43
_BREAK (274) 38
_WHILE (275) 28
_DO (276) 28
_SWITCH (277) 33
_CASE (278) 36
_DEFAULT (279) 39
_JSON (280) 15
_DOUBLEDOT (281) 36 39 50
_DOT (282) 62
_ZAPETA (283) 52 55
_LIST (284) 16
_FOR_EACH (285) 31
_EACH (286) 31
_IN (287) 31
_LSQUAREBRACKER (288) 53
_RSQUAREBRACKER (289) 53
_INC (290) 30 43
ONLY_IF (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program_DOUBLEDOT (38)
    on left: 1, on right: 0
function_list (39)
    on left: 2 3, on right: 1 3
function (40)
    on left: 5, on right: 2 3
$@1 (41)
    on left: 4, on right: 5
parameter (42)
    on left: 6 7, on right: 5
body (43)
    on left: 9, on right: 5
$@2 (44)
    on left: 8, on right: 9
variable_list (45)
    on left: 10 11, on right: 9 11
variable (46)
    on left: 12 13 14, on right: 11
json_var (47)
    on left: 15, on right: 13
list_var (48)
    on left: 16, on right: 14
statement_list (49)
    on left: 17 18, on right: 9 18 43 44
statement (50)
    on left: 19 20 21 22 23 24 25 26 27, on right: 18 36 39
do_while_statement (51)
    on left: 28, on right: 24
inc_statement (52)
    on left: 30, on right: 23
$@3 (53)
    on left: 29, on right: 30
for_each_statement (54)
    on left: 31, on right: 25
switch_statement (55)
    on left: 33, on right: 26
$@4 (56)
    on left: 32, on right: 33
case_statements (57)
    on left: 34 35, on right: 33 35
case_statement (58)
    on left: 36, on right: 34 35
break (59)
    on left: 37 38, on right: 36 44
default_statement (60)
    on left: 39, on right: 33
for_statement (61)
    on left: 43, on right: 27
@5 (62)
    on left: 40, on right: 43
$@6 (63)
    on left: 41, on right: 43
@7 (64)
    on left: 42, on right: 43
compound_statement (65)
    on left: 44, on right: 19 28 31 70 73
assignment_statement (66)
    on left: 45 46 47, on right: 20
json_assignment_statement (67)
    on left: 48, on right: 46
json_content (68)
    on left: 49 50, on right: 48 50
json_content_ending (69)
    on left: 51 52, on right: 50
list_assignment_statement (70)
    on left: 53, on right: 47
list_content (71)
    on left: 54 55, on right: 53 55
num_exp (72)
    on left: 56 57, on right: 45 57 61 68 74 75
exp (73)
    on left: 58 59 60 61 62, on right: 56 57
literal (74)
    on left: 63 64, on right: 28 36 43 50 54 55 58
function_call (75)
    on left: 66, on right: 60
$@8 (76)
    on left: 65, on right: 66
argument (77)
    on left: 67 68, on right: 66
if_statement (78)
    on left: 69 70, on right: 21
if_part (79)
    on left: 73, on right: 69 70
@9 (80)
    on left: 71, on right: 73
$@10 (81)
    on left: 72, on right: 73
rel_exp (82)
    on left: 74, on right: 43 73
return_statement (83)
    on left: 75, on right: 22


State 0

    0 $accept: . program_DOUBLEDOT $end

    _TYPE  shift, and go to state 1

    program_DOUBLEDOT  go to state 2
    function_list      go to state 3
    function           go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program_DOUBLEDOT . $end

    $end  shift, and go to state 6


State 3

    1 program_DOUBLEDOT: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program_DOUBLEDOT)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program_DOUBLEDOT $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    9 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    9 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17
    _JSON  shift, and go to state 18
    _LIST  shift, and go to state 19

    $default  reduce using rule 8 ($@2)

    $@2       go to state 20
    variable  go to state 21
    json_var  go to state 22
    list_var  go to state 23


State 17

   12 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 24


State 18

   15 json_var: _JSON . _ID _SEMICOLON

    _ID  shift, and go to state 25


State 19

   16 list_var: _LIST . _ID _SEMICOLON

    _ID  shift, and go to state 26


State 20

    9 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 27


State 21

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 22

   13 variable: json_var .

    $default  reduce using rule 13 (variable)


State 23

   14 variable: list_var .

    $default  reduce using rule 14 (variable)


State 24

   12 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 28


State 25

   15 json_var: _JSON _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 29


State 26

   16 list_var: _LIST _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 30


State 27

    9 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   18 statement_list: statement_list . statement

    _IF        shift, and go to state 31
    _RETURN    shift, and go to state 32
    _ID        shift, and go to state 33
    _LBRACKET  shift, and go to state 34
    _RBRACKET  shift, and go to state 35
    _FOR       shift, and go to state 36
    _DO        shift, and go to state 37
    _SWITCH    shift, and go to state 38
    _FOR_EACH  shift, and go to state 39

    statement                  go to state 40
    do_while_statement         go to state 41
    inc_statement              go to state 42
    for_each_statement         go to state 43
    switch_statement           go to state 44
    for_statement              go to state 45
    compound_statement         go to state 46
    assignment_statement       go to state 47
    json_assignment_statement  go to state 48
    list_assignment_statement  go to state 49
    if_statement               go to state 50
    if_part                    go to state 51
    return_statement           go to state 52


State 28

   12 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 29

   15 json_var: _JSON _ID _SEMICOLON .

    $default  reduce using rule 15 (json_var)


State 30

   16 list_var: _LIST _ID _SEMICOLON .

    $default  reduce using rule 16 (list_var)


State 31

   73 if_part: _IF . _LPAREN @9 rel_exp $@10 _RPAREN compound_statement

    _LPAREN  shift, and go to state 53


State 32

   75 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp        go to state 58
    exp            go to state 59
    literal        go to state 60
    function_call  go to state 61


State 33

   30 inc_statement: _ID . $@3 _INC _SEMICOLON
   45 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   48 json_assignment_statement: _ID . _ASSIGN _LBRACKET json_content _RBRACKET _SEMICOLON
   53 list_assignment_statement: _ID . _ASSIGN _LSQUAREBRACKER list_content _RSQUAREBRACKER _SEMICOLON

    _ASSIGN  shift, and go to state 62

    $default  reduce using rule 29 ($@3)

    $@3  go to state 63


State 34

   44 compound_statement: _LBRACKET . statement_list break _RBRACKET

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 64


State 35

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 36

   43 for_statement: _FOR . _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _LPAREN  shift, and go to state 65


State 37

   28 do_while_statement: _DO . compound_statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _LBRACKET  shift, and go to state 34

    compound_statement  go to state 66


State 38

   33 switch_statement: _SWITCH . $@4 _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    $default  reduce using rule 32 ($@4)

    $@4  go to state 67


State 39

   31 for_each_statement: _FOR_EACH . _EACH _ID _IN _ID compound_statement

    _EACH  shift, and go to state 68


State 40

   18 statement_list: statement_list statement .

    $default  reduce using rule 18 (statement_list)


State 41

   24 statement: do_while_statement .

    $default  reduce using rule 24 (statement)


State 42

   23 statement: inc_statement .

    $default  reduce using rule 23 (statement)


State 43

   25 statement: for_each_statement .

    $default  reduce using rule 25 (statement)


State 44

   26 statement: switch_statement .

    $default  reduce using rule 26 (statement)


State 45

   27 statement: for_statement .

    $default  reduce using rule 27 (statement)


State 46

   19 statement: compound_statement .

    $default  reduce using rule 19 (statement)


State 47

   20 statement: assignment_statement .

    $default  reduce using rule 20 (statement)


State 48

   46 assignment_statement: json_assignment_statement .

    $default  reduce using rule 46 (assignment_statement)


State 49

   47 assignment_statement: list_assignment_statement .

    $default  reduce using rule 47 (assignment_statement)


State 50

   21 statement: if_statement .

    $default  reduce using rule 21 (statement)


State 51

   69 if_statement: if_part .
   70             | if_part . _ELSE compound_statement

    _ELSE  shift, and go to state 69

    $default  reduce using rule 69 (if_statement)


State 52

   22 statement: return_statement .

    $default  reduce using rule 22 (statement)


State 53

   73 if_part: _IF _LPAREN . @9 rel_exp $@10 _RPAREN compound_statement

    $default  reduce using rule 71 (@9)

    @9  go to state 70


State 54

   59 exp: _ID .
   62    | _ID . _DOT _ID
   66 function_call: _ID . $@8 _LPAREN argument _RPAREN

    _DOT  shift, and go to state 71

    _LPAREN   reduce using rule 65 ($@8)
    $default  reduce using rule 59 (exp)

    $@8  go to state 72


State 55

   63 literal: _INT_NUMBER .

    $default  reduce using rule 63 (literal)


State 56

   64 literal: _UINT_NUMBER .

    $default  reduce using rule 64 (literal)


State 57

   61 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp        go to state 73
    exp            go to state 59
    literal        go to state 60
    function_call  go to state 61


State 58

   57 num_exp: num_exp . _AROP exp
   75 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 74
    _AROP       shift, and go to state 75


State 59

   56 num_exp: exp .

    $default  reduce using rule 56 (num_exp)


State 60

   58 exp: literal .

    $default  reduce using rule 58 (exp)


State 61

   60 exp: function_call .

    $default  reduce using rule 60 (exp)


State 62

   45 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON
   48 json_assignment_statement: _ID _ASSIGN . _LBRACKET json_content _RBRACKET _SEMICOLON
   53 list_assignment_statement: _ID _ASSIGN . _LSQUAREBRACKER list_content _RSQUAREBRACKER _SEMICOLON

    _ID              shift, and go to state 54
    _INT_NUMBER      shift, and go to state 55
    _UINT_NUMBER     shift, and go to state 56
    _LPAREN          shift, and go to state 57
    _LBRACKET        shift, and go to state 76
    _LSQUAREBRACKER  shift, and go to state 77

    num_exp        go to state 78
    exp            go to state 59
    literal        go to state 60
    function_call  go to state 61


State 63

   30 inc_statement: _ID $@3 . _INC _SEMICOLON

    _INC  shift, and go to state 79


State 64

   18 statement_list: statement_list . statement
   44 compound_statement: _LBRACKET statement_list . break _RBRACKET

    _IF        shift, and go to state 31
    _RETURN    shift, and go to state 32
    _ID        shift, and go to state 33
    _LBRACKET  shift, and go to state 34
    _FOR       shift, and go to state 36
    _BREAK     shift, and go to state 80
    _DO        shift, and go to state 37
    _SWITCH    shift, and go to state 38
    _FOR_EACH  shift, and go to state 39

    $default  reduce using rule 37 (break)

    statement                  go to state 40
    do_while_statement         go to state 41
    inc_statement              go to state 42
    for_each_statement         go to state 43
    switch_statement           go to state 44
    break                      go to state 81
    for_statement              go to state 45
    compound_statement         go to state 46
    assignment_statement       go to state 47
    json_assignment_statement  go to state 48
    list_assignment_statement  go to state 49
    if_statement               go to state 50
    if_part                    go to state 51
    return_statement           go to state 52


State 65

   43 for_statement: _FOR _LPAREN . _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _TYPE  shift, and go to state 82


State 66

   28 do_while_statement: _DO compound_statement . _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 83


State 67

   33 switch_statement: _SWITCH $@4 . _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _LPAREN  shift, and go to state 84


State 68

   31 for_each_statement: _FOR_EACH _EACH . _ID _IN _ID compound_statement

    _ID  shift, and go to state 85


State 69

   70 if_statement: if_part _ELSE . compound_statement

    _LBRACKET  shift, and go to state 34

    compound_statement  go to state 86


State 70

   73 if_part: _IF _LPAREN @9 . rel_exp $@10 _RPAREN compound_statement

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp        go to state 87
    exp            go to state 59
    literal        go to state 60
    function_call  go to state 61
    rel_exp        go to state 88


State 71

   62 exp: _ID _DOT . _ID

    _ID  shift, and go to state 89


State 72

   66 function_call: _ID $@8 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 90


State 73

   57 num_exp: num_exp . _AROP exp
   61 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 91
    _AROP    shift, and go to state 75


State 74

   75 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 75 (return_statement)


State 75

   57 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    exp            go to state 92
    literal        go to state 60
    function_call  go to state 61


State 76

   48 json_assignment_statement: _ID _ASSIGN _LBRACKET . json_content _RBRACKET _SEMICOLON

    $default  reduce using rule 49 (json_content)

    json_content  go to state 93


State 77

   53 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER . list_content _RSQUAREBRACKER _SEMICOLON

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    list_content  go to state 94
    literal       go to state 95


State 78

   45 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   57 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 96
    _AROP       shift, and go to state 75


State 79

   30 inc_statement: _ID $@3 _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 97


State 80

   38 break: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 98


State 81

   44 compound_statement: _LBRACKET statement_list break . _RBRACKET

    _RBRACKET  shift, and go to state 99


State 82

   43 for_statement: _FOR _LPAREN _TYPE . _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _ID  shift, and go to state 100


State 83

   28 do_while_statement: _DO compound_statement _WHILE . _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 101


State 84

   33 switch_statement: _SWITCH $@4 _LPAREN . _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _ID  shift, and go to state 102


State 85

   31 for_each_statement: _FOR_EACH _EACH _ID . _IN _ID compound_statement

    _IN  shift, and go to state 103


State 86

   70 if_statement: if_part _ELSE compound_statement .

    $default  reduce using rule 70 (if_statement)


State 87

   57 num_exp: num_exp . _AROP exp
   74 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 75
    _RELOP  shift, and go to state 104


State 88

   73 if_part: _IF _LPAREN @9 rel_exp . $@10 _RPAREN compound_statement

    $default  reduce using rule 72 ($@10)

    $@10  go to state 105


State 89

   62 exp: _ID _DOT _ID .

    $default  reduce using rule 62 (exp)


State 90

   66 function_call: _ID $@8 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    $default  reduce using rule 67 (argument)

    num_exp        go to state 106
    exp            go to state 59
    literal        go to state 60
    function_call  go to state 61
    argument       go to state 107


State 91

   61 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 61 (exp)


State 92

   57 num_exp: num_exp _AROP exp .

    $default  reduce using rule 57 (num_exp)


State 93

   48 json_assignment_statement: _ID _ASSIGN _LBRACKET json_content . _RBRACKET _SEMICOLON
   50 json_content: json_content . _ID _DOUBLEDOT literal json_content_ending

    _ID        shift, and go to state 108
    _RBRACKET  shift, and go to state 109


State 94

   53 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER list_content . _RSQUAREBRACKER _SEMICOLON
   55 list_content: list_content . _ZAPETA literal

    _ZAPETA          shift, and go to state 110
    _RSQUAREBRACKER  shift, and go to state 111


State 95

   54 list_content: literal .

    $default  reduce using rule 54 (list_content)


State 96

   45 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 45 (assignment_statement)


State 97

   30 inc_statement: _ID $@3 _INC _SEMICOLON .

    $default  reduce using rule 30 (inc_statement)


State 98

   38 break: _BREAK _SEMICOLON .

    $default  reduce using rule 38 (break)


State 99

   44 compound_statement: _LBRACKET statement_list break _RBRACKET .

    $default  reduce using rule 44 (compound_statement)


State 100

   43 for_statement: _FOR _LPAREN _TYPE _ID . @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 40 (@5)

    @5  go to state 112


State 101

   28 do_while_statement: _DO compound_statement _WHILE _LPAREN . _ID _RELOP literal _RPAREN _SEMICOLON

    _ID  shift, and go to state 113


State 102

   33 switch_statement: _SWITCH $@4 _LPAREN _ID . _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _RPAREN  shift, and go to state 114


State 103

   31 for_each_statement: _FOR_EACH _EACH _ID _IN . _ID compound_statement

    _ID  shift, and go to state 115


State 104

   74 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp        go to state 116
    exp            go to state 59
    literal        go to state 60
    function_call  go to state 61


State 105

   73 if_part: _IF _LPAREN @9 rel_exp $@10 . _RPAREN compound_statement

    _RPAREN  shift, and go to state 117


State 106

   57 num_exp: num_exp . _AROP exp
   68 argument: num_exp .

    _AROP  shift, and go to state 75

    $default  reduce using rule 68 (argument)


State 107

   66 function_call: _ID $@8 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 118


State 108

   50 json_content: json_content _ID . _DOUBLEDOT literal json_content_ending

    _DOUBLEDOT  shift, and go to state 119


State 109

   48 json_assignment_statement: _ID _ASSIGN _LBRACKET json_content _RBRACKET . _SEMICOLON

    _SEMICOLON  shift, and go to state 120


State 110

   55 list_content: list_content _ZAPETA . literal

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 121


State 111

   53 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER list_content _RSQUAREBRACKER . _SEMICOLON

    _SEMICOLON  shift, and go to state 122


State 112

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 . _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _ASSIGN  shift, and go to state 123


State 113

   28 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID . _RELOP literal _RPAREN _SEMICOLON

    _RELOP  shift, and go to state 124


State 114

   33 switch_statement: _SWITCH $@4 _LPAREN _ID _RPAREN . _LBRACKET case_statements default_statement _RBRACKET

    _LBRACKET  shift, and go to state 125


State 115

   31 for_each_statement: _FOR_EACH _EACH _ID _IN _ID . compound_statement

    _LBRACKET  shift, and go to state 34

    compound_statement  go to state 126


State 116

   57 num_exp: num_exp . _AROP exp
   74 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 75

    $default  reduce using rule 74 (rel_exp)


State 117

   73 if_part: _IF _LPAREN @9 rel_exp $@10 _RPAREN . compound_statement

    _LBRACKET  shift, and go to state 34

    compound_statement  go to state 127


State 118

   66 function_call: _ID $@8 _LPAREN argument _RPAREN .

    $default  reduce using rule 66 (function_call)


State 119

   50 json_content: json_content _ID _DOUBLEDOT . literal json_content_ending

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 128


State 120

   48 json_assignment_statement: _ID _ASSIGN _LBRACKET json_content _RBRACKET _SEMICOLON .

    $default  reduce using rule 48 (json_assignment_statement)


State 121

   55 list_content: list_content _ZAPETA literal .

    $default  reduce using rule 55 (list_content)


State 122

   53 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER list_content _RSQUAREBRACKER _SEMICOLON .

    $default  reduce using rule 53 (list_assignment_statement)


State 123

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN . literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 129


State 124

   28 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP . literal _RPAREN _SEMICOLON

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 130


State 125

   33 switch_statement: _SWITCH $@4 _LPAREN _ID _RPAREN _LBRACKET . case_statements default_statement _RBRACKET

    _CASE  shift, and go to state 131

    case_statements  go to state 132
    case_statement   go to state 133


State 126

   31 for_each_statement: _FOR_EACH _EACH _ID _IN _ID compound_statement .

    $default  reduce using rule 31 (for_each_statement)


State 127

   73 if_part: _IF _LPAREN @9 rel_exp $@10 _RPAREN compound_statement .

    $default  reduce using rule 73 (if_part)


State 128

   50 json_content: json_content _ID _DOUBLEDOT literal . json_content_ending

    _ZAPETA  shift, and go to state 134

    $default  reduce using rule 51 (json_content_ending)

    json_content_ending  go to state 135


State 129

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal . $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 41 ($@6)

    $@6  go to state 136


State 130

   28 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP literal . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 137


State 131

   36 case_statement: _CASE . literal _DOUBLEDOT statement break

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 138


State 132

   33 switch_statement: _SWITCH $@4 _LPAREN _ID _RPAREN _LBRACKET case_statements . default_statement _RBRACKET
   35 case_statements: case_statements . case_statement

    _CASE     shift, and go to state 131
    _DEFAULT  shift, and go to state 139

    case_statement     go to state 140
    default_statement  go to state 141


State 133

   34 case_statements: case_statement .

    $default  reduce using rule 34 (case_statements)


State 134

   52 json_content_ending: _ZAPETA .

    $default  reduce using rule 52 (json_content_ending)


State 135

   50 json_content: json_content _ID _DOUBLEDOT literal json_content_ending .

    $default  reduce using rule 50 (json_content)


State 136

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 . _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 142


State 137

   28 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP literal _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 143


State 138

   36 case_statement: _CASE literal . _DOUBLEDOT statement break

    _DOUBLEDOT  shift, and go to state 144


State 139

   39 default_statement: _DEFAULT . _DOUBLEDOT statement

    _DOUBLEDOT  shift, and go to state 145


State 140

   35 case_statements: case_statements case_statement .

    $default  reduce using rule 35 (case_statements)


State 141

   33 switch_statement: _SWITCH $@4 _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement . _RBRACKET

    _RBRACKET  shift, and go to state 146


State 142

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON . rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp        go to state 87
    exp            go to state 59
    literal        go to state 60
    function_call  go to state 61
    rel_exp        go to state 147


State 143

   28 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON .

    $default  reduce using rule 28 (do_while_statement)


State 144

   36 case_statement: _CASE literal _DOUBLEDOT . statement break

    _IF        shift, and go to state 31
    _RETURN    shift, and go to state 32
    _ID        shift, and go to state 33
    _LBRACKET  shift, and go to state 34
    _FOR       shift, and go to state 36
    _DO        shift, and go to state 37
    _SWITCH    shift, and go to state 38
    _FOR_EACH  shift, and go to state 39

    statement                  go to state 148
    do_while_statement         go to state 41
    inc_statement              go to state 42
    for_each_statement         go to state 43
    switch_statement           go to state 44
    for_statement              go to state 45
    compound_statement         go to state 46
    assignment_statement       go to state 47
    json_assignment_statement  go to state 48
    list_assignment_statement  go to state 49
    if_statement               go to state 50
    if_part                    go to state 51
    return_statement           go to state 52


State 145

   39 default_statement: _DEFAULT _DOUBLEDOT . statement

    _IF        shift, and go to state 31
    _RETURN    shift, and go to state 32
    _ID        shift, and go to state 33
    _LBRACKET  shift, and go to state 34
    _FOR       shift, and go to state 36
    _DO        shift, and go to state 37
    _SWITCH    shift, and go to state 38
    _FOR_EACH  shift, and go to state 39

    statement                  go to state 149
    do_while_statement         go to state 41
    inc_statement              go to state 42
    for_each_statement         go to state 43
    switch_statement           go to state 44
    for_statement              go to state 45
    compound_statement         go to state 46
    assignment_statement       go to state 47
    json_assignment_statement  go to state 48
    list_assignment_statement  go to state 49
    if_statement               go to state 50
    if_part                    go to state 51
    return_statement           go to state 52


State 146

   33 switch_statement: _SWITCH $@4 _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET .

    $default  reduce using rule 33 (switch_statement)


State 147

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp . _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 150


State 148

   36 case_statement: _CASE literal _DOUBLEDOT statement . break

    _BREAK  shift, and go to state 80

    $default  reduce using rule 37 (break)

    break  go to state 151


State 149

   39 default_statement: _DEFAULT _DOUBLEDOT statement .

    $default  reduce using rule 39 (default_statement)


State 150

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON . _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _ID  shift, and go to state 152


State 151

   36 case_statement: _CASE literal _DOUBLEDOT statement break .

    $default  reduce using rule 36 (case_statement)


State 152

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID . @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 42 (@7)

    @7  go to state 153


State 153

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 . _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _INC  shift, and go to state 154


State 154

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC . _RPAREN _LBRACKET statement_list _RBRACKET

    _RPAREN  shift, and go to state 155


State 155

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN . _LBRACKET statement_list _RBRACKET

    _LBRACKET  shift, and go to state 156


State 156

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 157


State 157

   18 statement_list: statement_list . statement
   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 31
    _RETURN    shift, and go to state 32
    _ID        shift, and go to state 33
    _LBRACKET  shift, and go to state 34
    _RBRACKET  shift, and go to state 158
    _FOR       shift, and go to state 36
    _DO        shift, and go to state 37
    _SWITCH    shift, and go to state 38
    _FOR_EACH  shift, and go to state 39

    statement                  go to state 40
    do_while_statement         go to state 41
    inc_statement              go to state 42
    for_each_statement         go to state 43
    switch_statement           go to state 44
    for_statement              go to state 45
    compound_statement         go to state 46
    assignment_statement       go to state 47
    json_assignment_statement  go to state 48
    list_assignment_statement  go to state 49
    if_statement               go to state 50
    if_part                    go to state 51
    return_statement           go to state 52


State 158

   43 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 43 (for_statement)
