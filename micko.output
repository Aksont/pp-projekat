Terminals unused in grammar

   _LIST


Grammar

    0 $accept: program_DOUBLEDOT $end

    1 program_DOUBLEDOT: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 $@2: %empty

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 variable: _TYPE _ID _SEMICOLON

   13 statement_list: %empty
   14               | statement_list statement

   15 statement: compound_statement
   16          | assignment_statement
   17          | if_statement
   18          | return_statement
   19          | inc_statement
   20          | do_while_statement
   21          | for_each_statement
   22          | switch_statement
   23          | for_statement

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

   25 $@3: %empty

   26 inc_statement: _ID $@3 _INC _SEMICOLON

   27 $@4: %empty

   28 $@5: %empty

   29 for_each_statement: _FOR_EACH _EACH _ID $@4 _IN _ID $@5 compound_statement

   30 switch_statement: _SWITCH _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET

   31 case_statements: case_statement
   32                | case_statements case_statement

   33 case_statement: _CASE literal _DOUBLEDOT statement break

   34 break: %empty
   35      | _BREAK _SEMICOLON

   36 default_statement: _DEFAULT _DOUBLEDOT statement

   37 @6: %empty

   38 $@7: %empty

   39 @8: %empty

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET

   41 compound_statement: _LBRACKET statement_list break _RBRACKET

   42 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   43                     | json_assignment_statement
   44                     | list_assignment_statement

   45 $@9: %empty

   46 json_assignment_statement: _ID _ASSIGN _LBRACKET $@9 json_content _RBRACKET _SEMICOLON

   47 json_content: %empty
   48             | json_content _ID _DOUBLEDOT literal json_content_ending

   49 json_content_ending: %empty
   50                    | _ZAPETA

   51 $@10: %empty

   52 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER $@10 list_content _RSQUAREBRACKER _SEMICOLON

   53 list_content: literal
   54             | list_content _ZAPETA literal

   55 num_exp: exp
   56        | num_exp _AROP exp

   57 exp: literal
   58    | _ID
   59    | function_call
   60    | _LPAREN num_exp _RPAREN
   61    | _ID _DOT _ID

   62 literal: _INT_NUMBER
   63        | _UINT_NUMBER

   64 $@11: %empty

   65 function_call: _ID $@11 _LPAREN argument _RPAREN

   66 argument: %empty
   67         | num_exp

   68 if_statement: if_part
   69             | if_part _ELSE compound_statement

   70 @12: %empty

   71 $@13: %empty

   72 if_part: _IF _LPAREN @12 rel_exp $@13 _RPAREN compound_statement

   73 rel_exp: num_exp _RELOP num_exp

   74 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 12 40
_IF (259) 72
_ELSE (260) 69
_RETURN (261) 74
_ID (262) 5 7 12 24 26 29 30 40 42 46 48 52 58 61 65
_INT_NUMBER (263) 62
_UINT_NUMBER (264) 63
_LPAREN (265) 5 24 30 40 60 65 72
_RPAREN (266) 5 24 30 40 60 65 72
_LBRACKET (267) 9 30 40 41 46
_RBRACKET (268) 9 30 40 41 46
_ASSIGN (269) 40 42 46 52
_SEMICOLON (270) 12 24 26 35 40 42 46 52 74
_AROP (271) 56
_RELOP (272) 24 73
_FOR (273) 40
_BREAK (274) 35
_WHILE (275) 24
_DO (276) 24
_SWITCH (277) 30
_CASE (278) 33
_DEFAULT (279) 36
_DOUBLEDOT (280) 33 36 48
_DOT (281) 61
_ZAPETA (282) 50 54
_LIST (283)
_FOR_EACH (284) 29
_EACH (285) 29
_IN (286) 29
_LSQUAREBRACKER (287) 52
_RSQUAREBRACKER (288) 52
_INC (289) 26 40
ONLY_IF (290)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program_DOUBLEDOT (37)
    on left: 1, on right: 0
function_list (38)
    on left: 2 3, on right: 1 3
function (39)
    on left: 5, on right: 2 3
$@1 (40)
    on left: 4, on right: 5
parameter (41)
    on left: 6 7, on right: 5
body (42)
    on left: 9, on right: 5
$@2 (43)
    on left: 8, on right: 9
variable_list (44)
    on left: 10 11, on right: 9 11
variable (45)
    on left: 12, on right: 11
statement_list (46)
    on left: 13 14, on right: 9 14 40 41
statement (47)
    on left: 15 16 17 18 19 20 21 22 23, on right: 14 33 36
do_while_statement (48)
    on left: 24, on right: 20
inc_statement (49)
    on left: 26, on right: 19
$@3 (50)
    on left: 25, on right: 26
for_each_statement (51)
    on left: 29, on right: 21
$@4 (52)
    on left: 27, on right: 29
$@5 (53)
    on left: 28, on right: 29
switch_statement (54)
    on left: 30, on right: 22
case_statements (55)
    on left: 31 32, on right: 30 32
case_statement (56)
    on left: 33, on right: 31 32
break (57)
    on left: 34 35, on right: 33 41
default_statement (58)
    on left: 36, on right: 30
for_statement (59)
    on left: 40, on right: 23
@6 (60)
    on left: 37, on right: 40
$@7 (61)
    on left: 38, on right: 40
@8 (62)
    on left: 39, on right: 40
compound_statement (63)
    on left: 41, on right: 15 24 29 69 72
assignment_statement (64)
    on left: 42 43 44, on right: 16
json_assignment_statement (65)
    on left: 46, on right: 43
$@9 (66)
    on left: 45, on right: 46
json_content (67)
    on left: 47 48, on right: 46 48
json_content_ending (68)
    on left: 49 50, on right: 48
list_assignment_statement (69)
    on left: 52, on right: 44
$@10 (70)
    on left: 51, on right: 52
list_content (71)
    on left: 53 54, on right: 52 54
num_exp (72)
    on left: 55 56, on right: 42 56 60 67 73 74
exp (73)
    on left: 57 58 59 60 61, on right: 55 56
literal (74)
    on left: 62 63, on right: 24 33 40 48 53 54 57
function_call (75)
    on left: 65, on right: 59
$@11 (76)
    on left: 64, on right: 65
argument (77)
    on left: 66 67, on right: 65
if_statement (78)
    on left: 68 69, on right: 17
if_part (79)
    on left: 72, on right: 68 69
@12 (80)
    on left: 70, on right: 72
$@13 (81)
    on left: 71, on right: 72
rel_exp (82)
    on left: 73, on right: 40 72
return_statement (83)
    on left: 74, on right: 18


State 0

    0 $accept: . program_DOUBLEDOT $end

    _TYPE  shift, and go to state 1

    program_DOUBLEDOT  go to state 2
    function_list      go to state 3
    function           go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program_DOUBLEDOT . $end

    $end  shift, and go to state 6


State 3

    1 program_DOUBLEDOT: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program_DOUBLEDOT)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program_DOUBLEDOT $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    9 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    9 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 8 ($@2)

    $@2       go to state 18
    variable  go to state 19


State 17

   12 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 20


State 18

    9 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 21


State 19

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 20

   12 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 22


State 21

    9 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   14 statement_list: statement_list . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 27
    _FOR       shift, and go to state 28
    _DO        shift, and go to state 29
    _SWITCH    shift, and go to state 30
    _FOR_EACH  shift, and go to state 31

    statement                  go to state 32
    do_while_statement         go to state 33
    inc_statement              go to state 34
    for_each_statement         go to state 35
    switch_statement           go to state 36
    for_statement              go to state 37
    compound_statement         go to state 38
    assignment_statement       go to state 39
    json_assignment_statement  go to state 40
    list_assignment_statement  go to state 41
    if_statement               go to state 42
    if_part                    go to state 43
    return_statement           go to state 44


State 22

   12 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 23

   72 if_part: _IF . _LPAREN @12 rel_exp $@13 _RPAREN compound_statement

    _LPAREN  shift, and go to state 45


State 24

   74 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 50
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 25

   26 inc_statement: _ID . $@3 _INC _SEMICOLON
   42 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   46 json_assignment_statement: _ID . _ASSIGN _LBRACKET $@9 json_content _RBRACKET _SEMICOLON
   52 list_assignment_statement: _ID . _ASSIGN _LSQUAREBRACKER $@10 list_content _RSQUAREBRACKER _SEMICOLON

    _ASSIGN  shift, and go to state 54

    $default  reduce using rule 25 ($@3)

    $@3  go to state 55


State 26

   41 compound_statement: _LBRACKET . statement_list break _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 56


State 27

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 28

   40 for_statement: _FOR . _LPAREN _TYPE _ID @6 _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _LPAREN  shift, and go to state 57


State 29

   24 do_while_statement: _DO . compound_statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _LBRACKET  shift, and go to state 26

    compound_statement  go to state 58


State 30

   30 switch_statement: _SWITCH . _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _LPAREN  shift, and go to state 59


State 31

   29 for_each_statement: _FOR_EACH . _EACH _ID $@4 _IN _ID $@5 compound_statement

    _EACH  shift, and go to state 60


State 32

   14 statement_list: statement_list statement .

    $default  reduce using rule 14 (statement_list)


State 33

   20 statement: do_while_statement .

    $default  reduce using rule 20 (statement)


State 34

   19 statement: inc_statement .

    $default  reduce using rule 19 (statement)


State 35

   21 statement: for_each_statement .

    $default  reduce using rule 21 (statement)


State 36

   22 statement: switch_statement .

    $default  reduce using rule 22 (statement)


State 37

   23 statement: for_statement .

    $default  reduce using rule 23 (statement)


State 38

   15 statement: compound_statement .

    $default  reduce using rule 15 (statement)


State 39

   16 statement: assignment_statement .

    $default  reduce using rule 16 (statement)


State 40

   43 assignment_statement: json_assignment_statement .

    $default  reduce using rule 43 (assignment_statement)


State 41

   44 assignment_statement: list_assignment_statement .

    $default  reduce using rule 44 (assignment_statement)


State 42

   17 statement: if_statement .

    $default  reduce using rule 17 (statement)


State 43

   68 if_statement: if_part .
   69             | if_part . _ELSE compound_statement

    _ELSE  shift, and go to state 61

    $default  reduce using rule 68 (if_statement)


State 44

   18 statement: return_statement .

    $default  reduce using rule 18 (statement)


State 45

   72 if_part: _IF _LPAREN . @12 rel_exp $@13 _RPAREN compound_statement

    $default  reduce using rule 70 (@12)

    @12  go to state 62


State 46

   58 exp: _ID .
   61    | _ID . _DOT _ID
   65 function_call: _ID . $@11 _LPAREN argument _RPAREN

    _DOT  shift, and go to state 63

    _LPAREN   reduce using rule 64 ($@11)
    $default  reduce using rule 58 (exp)

    $@11  go to state 64


State 47

   62 literal: _INT_NUMBER .

    $default  reduce using rule 62 (literal)


State 48

   63 literal: _UINT_NUMBER .

    $default  reduce using rule 63 (literal)


State 49

   60 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 65
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 50

   56 num_exp: num_exp . _AROP exp
   74 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 66
    _AROP       shift, and go to state 67


State 51

   55 num_exp: exp .

    $default  reduce using rule 55 (num_exp)


State 52

   57 exp: literal .

    $default  reduce using rule 57 (exp)


State 53

   59 exp: function_call .

    $default  reduce using rule 59 (exp)


State 54

   42 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON
   46 json_assignment_statement: _ID _ASSIGN . _LBRACKET $@9 json_content _RBRACKET _SEMICOLON
   52 list_assignment_statement: _ID _ASSIGN . _LSQUAREBRACKER $@10 list_content _RSQUAREBRACKER _SEMICOLON

    _ID              shift, and go to state 46
    _INT_NUMBER      shift, and go to state 47
    _UINT_NUMBER     shift, and go to state 48
    _LPAREN          shift, and go to state 49
    _LBRACKET        shift, and go to state 68
    _LSQUAREBRACKER  shift, and go to state 69

    num_exp        go to state 70
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 55

   26 inc_statement: _ID $@3 . _INC _SEMICOLON

    _INC  shift, and go to state 71


State 56

   14 statement_list: statement_list . statement
   41 compound_statement: _LBRACKET statement_list . break _RBRACKET

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28
    _BREAK     shift, and go to state 72
    _DO        shift, and go to state 29
    _SWITCH    shift, and go to state 30
    _FOR_EACH  shift, and go to state 31

    $default  reduce using rule 34 (break)

    statement                  go to state 32
    do_while_statement         go to state 33
    inc_statement              go to state 34
    for_each_statement         go to state 35
    switch_statement           go to state 36
    break                      go to state 73
    for_statement              go to state 37
    compound_statement         go to state 38
    assignment_statement       go to state 39
    json_assignment_statement  go to state 40
    list_assignment_statement  go to state 41
    if_statement               go to state 42
    if_part                    go to state 43
    return_statement           go to state 44


State 57

   40 for_statement: _FOR _LPAREN . _TYPE _ID @6 _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _TYPE  shift, and go to state 74


State 58

   24 do_while_statement: _DO compound_statement . _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 75


State 59

   30 switch_statement: _SWITCH _LPAREN . _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _ID  shift, and go to state 76


State 60

   29 for_each_statement: _FOR_EACH _EACH . _ID $@4 _IN _ID $@5 compound_statement

    _ID  shift, and go to state 77


State 61

   69 if_statement: if_part _ELSE . compound_statement

    _LBRACKET  shift, and go to state 26

    compound_statement  go to state 78


State 62

   72 if_part: _IF _LPAREN @12 . rel_exp $@13 _RPAREN compound_statement

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 79
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    rel_exp        go to state 80


State 63

   61 exp: _ID _DOT . _ID

    _ID  shift, and go to state 81


State 64

   65 function_call: _ID $@11 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 82


State 65

   56 num_exp: num_exp . _AROP exp
   60 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 83
    _AROP    shift, and go to state 67


State 66

   74 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 74 (return_statement)


State 67

   56 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    exp            go to state 84
    literal        go to state 52
    function_call  go to state 53


State 68

   46 json_assignment_statement: _ID _ASSIGN _LBRACKET . $@9 json_content _RBRACKET _SEMICOLON

    $default  reduce using rule 45 ($@9)

    $@9  go to state 85


State 69

   52 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER . $@10 list_content _RSQUAREBRACKER _SEMICOLON

    $default  reduce using rule 51 ($@10)

    $@10  go to state 86


State 70

   42 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   56 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 87
    _AROP       shift, and go to state 67


State 71

   26 inc_statement: _ID $@3 _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 88


State 72

   35 break: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 89


State 73

   41 compound_statement: _LBRACKET statement_list break . _RBRACKET

    _RBRACKET  shift, and go to state 90


State 74

   40 for_statement: _FOR _LPAREN _TYPE . _ID @6 _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _ID  shift, and go to state 91


State 75

   24 do_while_statement: _DO compound_statement _WHILE . _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 92


State 76

   30 switch_statement: _SWITCH _LPAREN _ID . _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _RPAREN  shift, and go to state 93


State 77

   29 for_each_statement: _FOR_EACH _EACH _ID . $@4 _IN _ID $@5 compound_statement

    $default  reduce using rule 27 ($@4)

    $@4  go to state 94


State 78

   69 if_statement: if_part _ELSE compound_statement .

    $default  reduce using rule 69 (if_statement)


State 79

   56 num_exp: num_exp . _AROP exp
   73 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 67
    _RELOP  shift, and go to state 95


State 80

   72 if_part: _IF _LPAREN @12 rel_exp . $@13 _RPAREN compound_statement

    $default  reduce using rule 71 ($@13)

    $@13  go to state 96


State 81

   61 exp: _ID _DOT _ID .

    $default  reduce using rule 61 (exp)


State 82

   65 function_call: _ID $@11 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    $default  reduce using rule 66 (argument)

    num_exp        go to state 97
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    argument       go to state 98


State 83

   60 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 60 (exp)


State 84

   56 num_exp: num_exp _AROP exp .

    $default  reduce using rule 56 (num_exp)


State 85

   46 json_assignment_statement: _ID _ASSIGN _LBRACKET $@9 . json_content _RBRACKET _SEMICOLON

    $default  reduce using rule 47 (json_content)

    json_content  go to state 99


State 86

   52 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER $@10 . list_content _RSQUAREBRACKER _SEMICOLON

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    list_content  go to state 100
    literal       go to state 101


State 87

   42 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 42 (assignment_statement)


State 88

   26 inc_statement: _ID $@3 _INC _SEMICOLON .

    $default  reduce using rule 26 (inc_statement)


State 89

   35 break: _BREAK _SEMICOLON .

    $default  reduce using rule 35 (break)


State 90

   41 compound_statement: _LBRACKET statement_list break _RBRACKET .

    $default  reduce using rule 41 (compound_statement)


State 91

   40 for_statement: _FOR _LPAREN _TYPE _ID . @6 _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 37 (@6)

    @6  go to state 102


State 92

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN . _ID _RELOP literal _RPAREN _SEMICOLON

    _ID  shift, and go to state 103


State 93

   30 switch_statement: _SWITCH _LPAREN _ID _RPAREN . _LBRACKET case_statements default_statement _RBRACKET

    _LBRACKET  shift, and go to state 104


State 94

   29 for_each_statement: _FOR_EACH _EACH _ID $@4 . _IN _ID $@5 compound_statement

    _IN  shift, and go to state 105


State 95

   73 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 106
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 96

   72 if_part: _IF _LPAREN @12 rel_exp $@13 . _RPAREN compound_statement

    _RPAREN  shift, and go to state 107


State 97

   56 num_exp: num_exp . _AROP exp
   67 argument: num_exp .

    _AROP  shift, and go to state 67

    $default  reduce using rule 67 (argument)


State 98

   65 function_call: _ID $@11 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 108


State 99

   46 json_assignment_statement: _ID _ASSIGN _LBRACKET $@9 json_content . _RBRACKET _SEMICOLON
   48 json_content: json_content . _ID _DOUBLEDOT literal json_content_ending

    _ID        shift, and go to state 109
    _RBRACKET  shift, and go to state 110


State 100

   52 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER $@10 list_content . _RSQUAREBRACKER _SEMICOLON
   54 list_content: list_content . _ZAPETA literal

    _ZAPETA          shift, and go to state 111
    _RSQUAREBRACKER  shift, and go to state 112


State 101

   53 list_content: literal .

    $default  reduce using rule 53 (list_content)


State 102

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 . _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _ASSIGN  shift, and go to state 113


State 103

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID . _RELOP literal _RPAREN _SEMICOLON

    _RELOP  shift, and go to state 114


State 104

   30 switch_statement: _SWITCH _LPAREN _ID _RPAREN _LBRACKET . case_statements default_statement _RBRACKET

    _CASE  shift, and go to state 115

    case_statements  go to state 116
    case_statement   go to state 117


State 105

   29 for_each_statement: _FOR_EACH _EACH _ID $@4 _IN . _ID $@5 compound_statement

    _ID  shift, and go to state 118


State 106

   56 num_exp: num_exp . _AROP exp
   73 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 67

    $default  reduce using rule 73 (rel_exp)


State 107

   72 if_part: _IF _LPAREN @12 rel_exp $@13 _RPAREN . compound_statement

    _LBRACKET  shift, and go to state 26

    compound_statement  go to state 119


State 108

   65 function_call: _ID $@11 _LPAREN argument _RPAREN .

    $default  reduce using rule 65 (function_call)


State 109

   48 json_content: json_content _ID . _DOUBLEDOT literal json_content_ending

    _DOUBLEDOT  shift, and go to state 120


State 110

   46 json_assignment_statement: _ID _ASSIGN _LBRACKET $@9 json_content _RBRACKET . _SEMICOLON

    _SEMICOLON  shift, and go to state 121


State 111

   54 list_content: list_content _ZAPETA . literal

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal  go to state 122


State 112

   52 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER $@10 list_content _RSQUAREBRACKER . _SEMICOLON

    _SEMICOLON  shift, and go to state 123


State 113

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN . literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal  go to state 124


State 114

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP . literal _RPAREN _SEMICOLON

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal  go to state 125


State 115

   33 case_statement: _CASE . literal _DOUBLEDOT statement break

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal  go to state 126


State 116

   30 switch_statement: _SWITCH _LPAREN _ID _RPAREN _LBRACKET case_statements . default_statement _RBRACKET
   32 case_statements: case_statements . case_statement

    _CASE     shift, and go to state 115
    _DEFAULT  shift, and go to state 127

    case_statement     go to state 128
    default_statement  go to state 129


State 117

   31 case_statements: case_statement .

    $default  reduce using rule 31 (case_statements)


State 118

   29 for_each_statement: _FOR_EACH _EACH _ID $@4 _IN _ID . $@5 compound_statement

    $default  reduce using rule 28 ($@5)

    $@5  go to state 130


State 119

   72 if_part: _IF _LPAREN @12 rel_exp $@13 _RPAREN compound_statement .

    $default  reduce using rule 72 (if_part)


State 120

   48 json_content: json_content _ID _DOUBLEDOT . literal json_content_ending

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal  go to state 131


State 121

   46 json_assignment_statement: _ID _ASSIGN _LBRACKET $@9 json_content _RBRACKET _SEMICOLON .

    $default  reduce using rule 46 (json_assignment_statement)


State 122

   54 list_content: list_content _ZAPETA literal .

    $default  reduce using rule 54 (list_content)


State 123

   52 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER $@10 list_content _RSQUAREBRACKER _SEMICOLON .

    $default  reduce using rule 52 (list_assignment_statement)


State 124

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal . $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 38 ($@7)

    $@7  go to state 132


State 125

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP literal . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 133


State 126

   33 case_statement: _CASE literal . _DOUBLEDOT statement break

    _DOUBLEDOT  shift, and go to state 134


State 127

   36 default_statement: _DEFAULT . _DOUBLEDOT statement

    _DOUBLEDOT  shift, and go to state 135


State 128

   32 case_statements: case_statements case_statement .

    $default  reduce using rule 32 (case_statements)


State 129

   30 switch_statement: _SWITCH _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement . _RBRACKET

    _RBRACKET  shift, and go to state 136


State 130

   29 for_each_statement: _FOR_EACH _EACH _ID $@4 _IN _ID $@5 . compound_statement

    _LBRACKET  shift, and go to state 26

    compound_statement  go to state 137


State 131

   48 json_content: json_content _ID _DOUBLEDOT literal . json_content_ending

    _ZAPETA  shift, and go to state 138

    $default  reduce using rule 49 (json_content_ending)

    json_content_ending  go to state 139


State 132

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal $@7 . _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 140


State 133

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP literal _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 141


State 134

   33 case_statement: _CASE literal _DOUBLEDOT . statement break

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28
    _DO        shift, and go to state 29
    _SWITCH    shift, and go to state 30
    _FOR_EACH  shift, and go to state 31

    statement                  go to state 142
    do_while_statement         go to state 33
    inc_statement              go to state 34
    for_each_statement         go to state 35
    switch_statement           go to state 36
    for_statement              go to state 37
    compound_statement         go to state 38
    assignment_statement       go to state 39
    json_assignment_statement  go to state 40
    list_assignment_statement  go to state 41
    if_statement               go to state 42
    if_part                    go to state 43
    return_statement           go to state 44


State 135

   36 default_statement: _DEFAULT _DOUBLEDOT . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28
    _DO        shift, and go to state 29
    _SWITCH    shift, and go to state 30
    _FOR_EACH  shift, and go to state 31

    statement                  go to state 143
    do_while_statement         go to state 33
    inc_statement              go to state 34
    for_each_statement         go to state 35
    switch_statement           go to state 36
    for_statement              go to state 37
    compound_statement         go to state 38
    assignment_statement       go to state 39
    json_assignment_statement  go to state 40
    list_assignment_statement  go to state 41
    if_statement               go to state 42
    if_part                    go to state 43
    return_statement           go to state 44


State 136

   30 switch_statement: _SWITCH _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET .

    $default  reduce using rule 30 (switch_statement)


State 137

   29 for_each_statement: _FOR_EACH _EACH _ID $@4 _IN _ID $@5 compound_statement .

    $default  reduce using rule 29 (for_each_statement)


State 138

   50 json_content_ending: _ZAPETA .

    $default  reduce using rule 50 (json_content_ending)


State 139

   48 json_content: json_content _ID _DOUBLEDOT literal json_content_ending .

    $default  reduce using rule 48 (json_content)


State 140

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal $@7 _SEMICOLON . rel_exp _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 79
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    rel_exp        go to state 144


State 141

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON .

    $default  reduce using rule 24 (do_while_statement)


State 142

   33 case_statement: _CASE literal _DOUBLEDOT statement . break

    _BREAK  shift, and go to state 72

    $default  reduce using rule 34 (break)

    break  go to state 145


State 143

   36 default_statement: _DEFAULT _DOUBLEDOT statement .

    $default  reduce using rule 36 (default_statement)


State 144

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal $@7 _SEMICOLON rel_exp . _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 146


State 145

   33 case_statement: _CASE literal _DOUBLEDOT statement break .

    $default  reduce using rule 33 (case_statement)


State 146

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON . _ID @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _ID  shift, and go to state 147


State 147

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID . @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 39 (@8)

    @8  go to state 148


State 148

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 . _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _INC  shift, and go to state 149


State 149

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC . _RPAREN _LBRACKET statement_list _RBRACKET

    _RPAREN  shift, and go to state 150


State 150

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC _RPAREN . _LBRACKET statement_list _RBRACKET

    _LBRACKET  shift, and go to state 151


State 151

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 152


State 152

   14 statement_list: statement_list . statement
   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 153
    _FOR       shift, and go to state 28
    _DO        shift, and go to state 29
    _SWITCH    shift, and go to state 30
    _FOR_EACH  shift, and go to state 31

    statement                  go to state 32
    do_while_statement         go to state 33
    inc_statement              go to state 34
    for_each_statement         go to state 35
    switch_statement           go to state 36
    for_statement              go to state 37
    compound_statement         go to state 38
    assignment_statement       go to state 39
    json_assignment_statement  go to state 40
    list_assignment_statement  go to state 41
    if_statement               go to state 42
    if_part                    go to state 43
    return_statement           go to state 44


State 153

   40 for_statement: _FOR _LPAREN _TYPE _ID @6 _ASSIGN literal $@7 _SEMICOLON rel_exp _SEMICOLON _ID @8 _INC _RPAREN _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 40 (for_statement)
