Terminals unused in grammar

   _LIST


Grammar

    0 $accept: program_DOUBLEDOT $end

    1 program_DOUBLEDOT: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 $@2: %empty

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 variable: _TYPE _ID _SEMICOLON

   13 statement_list: %empty
   14               | statement_list statement

   15 statement: compound_statement
   16          | assignment_statement
   17          | if_statement
   18          | return_statement
   19          | inc_statement
   20          | do_while_statement
   21          | for_each_statement
   22          | switch_statement
   23          | for_statement

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

   25 $@3: %empty

   26 inc_statement: _ID $@3 _INC _SEMICOLON

   27 for_each_statement: _FOR_EACH _EACH _ID _IN _ID compound_statement

   28 $@4: %empty

   29 switch_statement: _SWITCH $@4 _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET

   30 case_statements: case_statement
   31                | case_statements case_statement

   32 case_statement: _CASE literal _DOUBLEDOT statement break

   33 break: %empty
   34      | _BREAK _SEMICOLON

   35 default_statement: _DEFAULT _DOUBLEDOT statement

   36 @5: %empty

   37 $@6: %empty

   38 @7: %empty

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

   40 compound_statement: _LBRACKET statement_list break _RBRACKET

   41 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   42                     | json_assignment_statement
   43                     | list_assignment_statement

   44 $@8: %empty

   45 json_assignment_statement: _ID _ASSIGN _LBRACKET $@8 json_content _RBRACKET _SEMICOLON

   46 json_content: %empty
   47             | json_content _ID _DOUBLEDOT literal json_content_ending

   48 json_content_ending: %empty
   49                    | _ZAPETA

   50 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER list_content _RSQUAREBRACKER _SEMICOLON

   51 list_content: literal
   52             | list_content _ZAPETA literal

   53 num_exp: exp
   54        | num_exp _AROP exp

   55 exp: literal
   56    | _ID
   57    | function_call
   58    | _LPAREN num_exp _RPAREN
   59    | _ID _DOT _ID

   60 literal: _INT_NUMBER
   61        | _UINT_NUMBER

   62 $@9: %empty

   63 function_call: _ID $@9 _LPAREN argument _RPAREN

   64 argument: %empty
   65         | num_exp

   66 if_statement: if_part
   67             | if_part _ELSE compound_statement

   68 @10: %empty

   69 $@11: %empty

   70 if_part: _IF _LPAREN @10 rel_exp $@11 _RPAREN compound_statement

   71 rel_exp: num_exp _RELOP num_exp

   72 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 12 39
_IF (259) 70
_ELSE (260) 67
_RETURN (261) 72
_ID (262) 5 7 12 24 26 27 29 39 41 45 47 50 56 59 63
_INT_NUMBER (263) 60
_UINT_NUMBER (264) 61
_LPAREN (265) 5 24 29 39 58 63 70
_RPAREN (266) 5 24 29 39 58 63 70
_LBRACKET (267) 9 29 39 40 45
_RBRACKET (268) 9 29 39 40 45
_ASSIGN (269) 39 41 45 50
_SEMICOLON (270) 12 24 26 34 39 41 45 50 72
_AROP (271) 54
_RELOP (272) 24 71
_FOR (273) 39
_BREAK (274) 34
_WHILE (275) 24
_DO (276) 24
_SWITCH (277) 29
_CASE (278) 32
_DEFAULT (279) 35
_DOUBLEDOT (280) 32 35 47
_DOT (281) 59
_ZAPETA (282) 49 52
_LIST (283)
_FOR_EACH (284) 27
_EACH (285) 27
_IN (286) 27
_LSQUAREBRACKER (287) 50
_RSQUAREBRACKER (288) 50
_INC (289) 26 39
ONLY_IF (290)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program_DOUBLEDOT (37)
    on left: 1, on right: 0
function_list (38)
    on left: 2 3, on right: 1 3
function (39)
    on left: 5, on right: 2 3
$@1 (40)
    on left: 4, on right: 5
parameter (41)
    on left: 6 7, on right: 5
body (42)
    on left: 9, on right: 5
$@2 (43)
    on left: 8, on right: 9
variable_list (44)
    on left: 10 11, on right: 9 11
variable (45)
    on left: 12, on right: 11
statement_list (46)
    on left: 13 14, on right: 9 14 39 40
statement (47)
    on left: 15 16 17 18 19 20 21 22 23, on right: 14 32 35
do_while_statement (48)
    on left: 24, on right: 20
inc_statement (49)
    on left: 26, on right: 19
$@3 (50)
    on left: 25, on right: 26
for_each_statement (51)
    on left: 27, on right: 21
switch_statement (52)
    on left: 29, on right: 22
$@4 (53)
    on left: 28, on right: 29
case_statements (54)
    on left: 30 31, on right: 29 31
case_statement (55)
    on left: 32, on right: 30 31
break (56)
    on left: 33 34, on right: 32 40
default_statement (57)
    on left: 35, on right: 29
for_statement (58)
    on left: 39, on right: 23
@5 (59)
    on left: 36, on right: 39
$@6 (60)
    on left: 37, on right: 39
@7 (61)
    on left: 38, on right: 39
compound_statement (62)
    on left: 40, on right: 15 24 27 67 70
assignment_statement (63)
    on left: 41 42 43, on right: 16
json_assignment_statement (64)
    on left: 45, on right: 42
$@8 (65)
    on left: 44, on right: 45
json_content (66)
    on left: 46 47, on right: 45 47
json_content_ending (67)
    on left: 48 49, on right: 47
list_assignment_statement (68)
    on left: 50, on right: 43
list_content (69)
    on left: 51 52, on right: 50 52
num_exp (70)
    on left: 53 54, on right: 41 54 58 65 71 72
exp (71)
    on left: 55 56 57 58 59, on right: 53 54
literal (72)
    on left: 60 61, on right: 24 32 39 47 51 52 55
function_call (73)
    on left: 63, on right: 57
$@9 (74)
    on left: 62, on right: 63
argument (75)
    on left: 64 65, on right: 63
if_statement (76)
    on left: 66 67, on right: 17
if_part (77)
    on left: 70, on right: 66 67
@10 (78)
    on left: 68, on right: 70
$@11 (79)
    on left: 69, on right: 70
rel_exp (80)
    on left: 71, on right: 39 70
return_statement (81)
    on left: 72, on right: 18


State 0

    0 $accept: . program_DOUBLEDOT $end

    _TYPE  shift, and go to state 1

    program_DOUBLEDOT  go to state 2
    function_list      go to state 3
    function           go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program_DOUBLEDOT . $end

    $end  shift, and go to state 6


State 3

    1 program_DOUBLEDOT: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program_DOUBLEDOT)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program_DOUBLEDOT $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    9 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    9 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 8 ($@2)

    $@2       go to state 18
    variable  go to state 19


State 17

   12 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 20


State 18

    9 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 21


State 19

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 20

   12 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 22


State 21

    9 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   14 statement_list: statement_list . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 27
    _FOR       shift, and go to state 28
    _DO        shift, and go to state 29
    _SWITCH    shift, and go to state 30
    _FOR_EACH  shift, and go to state 31

    statement                  go to state 32
    do_while_statement         go to state 33
    inc_statement              go to state 34
    for_each_statement         go to state 35
    switch_statement           go to state 36
    for_statement              go to state 37
    compound_statement         go to state 38
    assignment_statement       go to state 39
    json_assignment_statement  go to state 40
    list_assignment_statement  go to state 41
    if_statement               go to state 42
    if_part                    go to state 43
    return_statement           go to state 44


State 22

   12 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 23

   70 if_part: _IF . _LPAREN @10 rel_exp $@11 _RPAREN compound_statement

    _LPAREN  shift, and go to state 45


State 24

   72 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 50
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 25

   26 inc_statement: _ID . $@3 _INC _SEMICOLON
   41 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   45 json_assignment_statement: _ID . _ASSIGN _LBRACKET $@8 json_content _RBRACKET _SEMICOLON
   50 list_assignment_statement: _ID . _ASSIGN _LSQUAREBRACKER list_content _RSQUAREBRACKER _SEMICOLON

    _ASSIGN  shift, and go to state 54

    $default  reduce using rule 25 ($@3)

    $@3  go to state 55


State 26

   40 compound_statement: _LBRACKET . statement_list break _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 56


State 27

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 28

   39 for_statement: _FOR . _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _LPAREN  shift, and go to state 57


State 29

   24 do_while_statement: _DO . compound_statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _LBRACKET  shift, and go to state 26

    compound_statement  go to state 58


State 30

   29 switch_statement: _SWITCH . $@4 _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    $default  reduce using rule 28 ($@4)

    $@4  go to state 59


State 31

   27 for_each_statement: _FOR_EACH . _EACH _ID _IN _ID compound_statement

    _EACH  shift, and go to state 60


State 32

   14 statement_list: statement_list statement .

    $default  reduce using rule 14 (statement_list)


State 33

   20 statement: do_while_statement .

    $default  reduce using rule 20 (statement)


State 34

   19 statement: inc_statement .

    $default  reduce using rule 19 (statement)


State 35

   21 statement: for_each_statement .

    $default  reduce using rule 21 (statement)


State 36

   22 statement: switch_statement .

    $default  reduce using rule 22 (statement)


State 37

   23 statement: for_statement .

    $default  reduce using rule 23 (statement)


State 38

   15 statement: compound_statement .

    $default  reduce using rule 15 (statement)


State 39

   16 statement: assignment_statement .

    $default  reduce using rule 16 (statement)


State 40

   42 assignment_statement: json_assignment_statement .

    $default  reduce using rule 42 (assignment_statement)


State 41

   43 assignment_statement: list_assignment_statement .

    $default  reduce using rule 43 (assignment_statement)


State 42

   17 statement: if_statement .

    $default  reduce using rule 17 (statement)


State 43

   66 if_statement: if_part .
   67             | if_part . _ELSE compound_statement

    _ELSE  shift, and go to state 61

    $default  reduce using rule 66 (if_statement)


State 44

   18 statement: return_statement .

    $default  reduce using rule 18 (statement)


State 45

   70 if_part: _IF _LPAREN . @10 rel_exp $@11 _RPAREN compound_statement

    $default  reduce using rule 68 (@10)

    @10  go to state 62


State 46

   56 exp: _ID .
   59    | _ID . _DOT _ID
   63 function_call: _ID . $@9 _LPAREN argument _RPAREN

    _DOT  shift, and go to state 63

    _LPAREN   reduce using rule 62 ($@9)
    $default  reduce using rule 56 (exp)

    $@9  go to state 64


State 47

   60 literal: _INT_NUMBER .

    $default  reduce using rule 60 (literal)


State 48

   61 literal: _UINT_NUMBER .

    $default  reduce using rule 61 (literal)


State 49

   58 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 65
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 50

   54 num_exp: num_exp . _AROP exp
   72 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 66
    _AROP       shift, and go to state 67


State 51

   53 num_exp: exp .

    $default  reduce using rule 53 (num_exp)


State 52

   55 exp: literal .

    $default  reduce using rule 55 (exp)


State 53

   57 exp: function_call .

    $default  reduce using rule 57 (exp)


State 54

   41 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON
   45 json_assignment_statement: _ID _ASSIGN . _LBRACKET $@8 json_content _RBRACKET _SEMICOLON
   50 list_assignment_statement: _ID _ASSIGN . _LSQUAREBRACKER list_content _RSQUAREBRACKER _SEMICOLON

    _ID              shift, and go to state 46
    _INT_NUMBER      shift, and go to state 47
    _UINT_NUMBER     shift, and go to state 48
    _LPAREN          shift, and go to state 49
    _LBRACKET        shift, and go to state 68
    _LSQUAREBRACKER  shift, and go to state 69

    num_exp        go to state 70
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 55

   26 inc_statement: _ID $@3 . _INC _SEMICOLON

    _INC  shift, and go to state 71


State 56

   14 statement_list: statement_list . statement
   40 compound_statement: _LBRACKET statement_list . break _RBRACKET

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28
    _BREAK     shift, and go to state 72
    _DO        shift, and go to state 29
    _SWITCH    shift, and go to state 30
    _FOR_EACH  shift, and go to state 31

    $default  reduce using rule 33 (break)

    statement                  go to state 32
    do_while_statement         go to state 33
    inc_statement              go to state 34
    for_each_statement         go to state 35
    switch_statement           go to state 36
    break                      go to state 73
    for_statement              go to state 37
    compound_statement         go to state 38
    assignment_statement       go to state 39
    json_assignment_statement  go to state 40
    list_assignment_statement  go to state 41
    if_statement               go to state 42
    if_part                    go to state 43
    return_statement           go to state 44


State 57

   39 for_statement: _FOR _LPAREN . _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _TYPE  shift, and go to state 74


State 58

   24 do_while_statement: _DO compound_statement . _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 75


State 59

   29 switch_statement: _SWITCH $@4 . _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _LPAREN  shift, and go to state 76


State 60

   27 for_each_statement: _FOR_EACH _EACH . _ID _IN _ID compound_statement

    _ID  shift, and go to state 77


State 61

   67 if_statement: if_part _ELSE . compound_statement

    _LBRACKET  shift, and go to state 26

    compound_statement  go to state 78


State 62

   70 if_part: _IF _LPAREN @10 . rel_exp $@11 _RPAREN compound_statement

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 79
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    rel_exp        go to state 80


State 63

   59 exp: _ID _DOT . _ID

    _ID  shift, and go to state 81


State 64

   63 function_call: _ID $@9 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 82


State 65

   54 num_exp: num_exp . _AROP exp
   58 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 83
    _AROP    shift, and go to state 67


State 66

   72 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 72 (return_statement)


State 67

   54 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    exp            go to state 84
    literal        go to state 52
    function_call  go to state 53


State 68

   45 json_assignment_statement: _ID _ASSIGN _LBRACKET . $@8 json_content _RBRACKET _SEMICOLON

    $default  reduce using rule 44 ($@8)

    $@8  go to state 85


State 69

   50 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER . list_content _RSQUAREBRACKER _SEMICOLON

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    list_content  go to state 86
    literal       go to state 87


State 70

   41 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   54 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 88
    _AROP       shift, and go to state 67


State 71

   26 inc_statement: _ID $@3 _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 89


State 72

   34 break: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 90


State 73

   40 compound_statement: _LBRACKET statement_list break . _RBRACKET

    _RBRACKET  shift, and go to state 91


State 74

   39 for_statement: _FOR _LPAREN _TYPE . _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _ID  shift, and go to state 92


State 75

   24 do_while_statement: _DO compound_statement _WHILE . _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 93


State 76

   29 switch_statement: _SWITCH $@4 _LPAREN . _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _ID  shift, and go to state 94


State 77

   27 for_each_statement: _FOR_EACH _EACH _ID . _IN _ID compound_statement

    _IN  shift, and go to state 95


State 78

   67 if_statement: if_part _ELSE compound_statement .

    $default  reduce using rule 67 (if_statement)


State 79

   54 num_exp: num_exp . _AROP exp
   71 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 67
    _RELOP  shift, and go to state 96


State 80

   70 if_part: _IF _LPAREN @10 rel_exp . $@11 _RPAREN compound_statement

    $default  reduce using rule 69 ($@11)

    $@11  go to state 97


State 81

   59 exp: _ID _DOT _ID .

    $default  reduce using rule 59 (exp)


State 82

   63 function_call: _ID $@9 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    $default  reduce using rule 64 (argument)

    num_exp        go to state 98
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    argument       go to state 99


State 83

   58 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 58 (exp)


State 84

   54 num_exp: num_exp _AROP exp .

    $default  reduce using rule 54 (num_exp)


State 85

   45 json_assignment_statement: _ID _ASSIGN _LBRACKET $@8 . json_content _RBRACKET _SEMICOLON

    $default  reduce using rule 46 (json_content)

    json_content  go to state 100


State 86

   50 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER list_content . _RSQUAREBRACKER _SEMICOLON
   52 list_content: list_content . _ZAPETA literal

    _ZAPETA          shift, and go to state 101
    _RSQUAREBRACKER  shift, and go to state 102


State 87

   51 list_content: literal .

    $default  reduce using rule 51 (list_content)


State 88

   41 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 41 (assignment_statement)


State 89

   26 inc_statement: _ID $@3 _INC _SEMICOLON .

    $default  reduce using rule 26 (inc_statement)


State 90

   34 break: _BREAK _SEMICOLON .

    $default  reduce using rule 34 (break)


State 91

   40 compound_statement: _LBRACKET statement_list break _RBRACKET .

    $default  reduce using rule 40 (compound_statement)


State 92

   39 for_statement: _FOR _LPAREN _TYPE _ID . @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 36 (@5)

    @5  go to state 103


State 93

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN . _ID _RELOP literal _RPAREN _SEMICOLON

    _ID  shift, and go to state 104


State 94

   29 switch_statement: _SWITCH $@4 _LPAREN _ID . _RPAREN _LBRACKET case_statements default_statement _RBRACKET

    _RPAREN  shift, and go to state 105


State 95

   27 for_each_statement: _FOR_EACH _EACH _ID _IN . _ID compound_statement

    _ID  shift, and go to state 106


State 96

   71 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 107
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 97

   70 if_part: _IF _LPAREN @10 rel_exp $@11 . _RPAREN compound_statement

    _RPAREN  shift, and go to state 108


State 98

   54 num_exp: num_exp . _AROP exp
   65 argument: num_exp .

    _AROP  shift, and go to state 67

    $default  reduce using rule 65 (argument)


State 99

   63 function_call: _ID $@9 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 109


State 100

   45 json_assignment_statement: _ID _ASSIGN _LBRACKET $@8 json_content . _RBRACKET _SEMICOLON
   47 json_content: json_content . _ID _DOUBLEDOT literal json_content_ending

    _ID        shift, and go to state 110
    _RBRACKET  shift, and go to state 111


State 101

   52 list_content: list_content _ZAPETA . literal

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal  go to state 112


State 102

   50 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER list_content _RSQUAREBRACKER . _SEMICOLON

    _SEMICOLON  shift, and go to state 113


State 103

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 . _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _ASSIGN  shift, and go to state 114


State 104

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID . _RELOP literal _RPAREN _SEMICOLON

    _RELOP  shift, and go to state 115


State 105

   29 switch_statement: _SWITCH $@4 _LPAREN _ID _RPAREN . _LBRACKET case_statements default_statement _RBRACKET

    _LBRACKET  shift, and go to state 116


State 106

   27 for_each_statement: _FOR_EACH _EACH _ID _IN _ID . compound_statement

    _LBRACKET  shift, and go to state 26

    compound_statement  go to state 117


State 107

   54 num_exp: num_exp . _AROP exp
   71 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 67

    $default  reduce using rule 71 (rel_exp)


State 108

   70 if_part: _IF _LPAREN @10 rel_exp $@11 _RPAREN . compound_statement

    _LBRACKET  shift, and go to state 26

    compound_statement  go to state 118


State 109

   63 function_call: _ID $@9 _LPAREN argument _RPAREN .

    $default  reduce using rule 63 (function_call)


State 110

   47 json_content: json_content _ID . _DOUBLEDOT literal json_content_ending

    _DOUBLEDOT  shift, and go to state 119


State 111

   45 json_assignment_statement: _ID _ASSIGN _LBRACKET $@8 json_content _RBRACKET . _SEMICOLON

    _SEMICOLON  shift, and go to state 120


State 112

   52 list_content: list_content _ZAPETA literal .

    $default  reduce using rule 52 (list_content)


State 113

   50 list_assignment_statement: _ID _ASSIGN _LSQUAREBRACKER list_content _RSQUAREBRACKER _SEMICOLON .

    $default  reduce using rule 50 (list_assignment_statement)


State 114

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN . literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal  go to state 121


State 115

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP . literal _RPAREN _SEMICOLON

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal  go to state 122


State 116

   29 switch_statement: _SWITCH $@4 _LPAREN _ID _RPAREN _LBRACKET . case_statements default_statement _RBRACKET

    _CASE  shift, and go to state 123

    case_statements  go to state 124
    case_statement   go to state 125


State 117

   27 for_each_statement: _FOR_EACH _EACH _ID _IN _ID compound_statement .

    $default  reduce using rule 27 (for_each_statement)


State 118

   70 if_part: _IF _LPAREN @10 rel_exp $@11 _RPAREN compound_statement .

    $default  reduce using rule 70 (if_part)


State 119

   47 json_content: json_content _ID _DOUBLEDOT . literal json_content_ending

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal  go to state 126


State 120

   45 json_assignment_statement: _ID _ASSIGN _LBRACKET $@8 json_content _RBRACKET _SEMICOLON .

    $default  reduce using rule 45 (json_assignment_statement)


State 121

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal . $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 37 ($@6)

    $@6  go to state 127


State 122

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP literal . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 128


State 123

   32 case_statement: _CASE . literal _DOUBLEDOT statement break

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal  go to state 129


State 124

   29 switch_statement: _SWITCH $@4 _LPAREN _ID _RPAREN _LBRACKET case_statements . default_statement _RBRACKET
   31 case_statements: case_statements . case_statement

    _CASE     shift, and go to state 123
    _DEFAULT  shift, and go to state 130

    case_statement     go to state 131
    default_statement  go to state 132


State 125

   30 case_statements: case_statement .

    $default  reduce using rule 30 (case_statements)


State 126

   47 json_content: json_content _ID _DOUBLEDOT literal . json_content_ending

    _ZAPETA  shift, and go to state 133

    $default  reduce using rule 48 (json_content_ending)

    json_content_ending  go to state 134


State 127

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 . _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 135


State 128

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP literal _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 136


State 129

   32 case_statement: _CASE literal . _DOUBLEDOT statement break

    _DOUBLEDOT  shift, and go to state 137


State 130

   35 default_statement: _DEFAULT . _DOUBLEDOT statement

    _DOUBLEDOT  shift, and go to state 138


State 131

   31 case_statements: case_statements case_statement .

    $default  reduce using rule 31 (case_statements)


State 132

   29 switch_statement: _SWITCH $@4 _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement . _RBRACKET

    _RBRACKET  shift, and go to state 139


State 133

   49 json_content_ending: _ZAPETA .

    $default  reduce using rule 49 (json_content_ending)


State 134

   47 json_content: json_content _ID _DOUBLEDOT literal json_content_ending .

    $default  reduce using rule 47 (json_content)


State 135

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON . rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 79
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    rel_exp        go to state 140


State 136

   24 do_while_statement: _DO compound_statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON .

    $default  reduce using rule 24 (do_while_statement)


State 137

   32 case_statement: _CASE literal _DOUBLEDOT . statement break

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28
    _DO        shift, and go to state 29
    _SWITCH    shift, and go to state 30
    _FOR_EACH  shift, and go to state 31

    statement                  go to state 141
    do_while_statement         go to state 33
    inc_statement              go to state 34
    for_each_statement         go to state 35
    switch_statement           go to state 36
    for_statement              go to state 37
    compound_statement         go to state 38
    assignment_statement       go to state 39
    json_assignment_statement  go to state 40
    list_assignment_statement  go to state 41
    if_statement               go to state 42
    if_part                    go to state 43
    return_statement           go to state 44


State 138

   35 default_statement: _DEFAULT _DOUBLEDOT . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28
    _DO        shift, and go to state 29
    _SWITCH    shift, and go to state 30
    _FOR_EACH  shift, and go to state 31

    statement                  go to state 142
    do_while_statement         go to state 33
    inc_statement              go to state 34
    for_each_statement         go to state 35
    switch_statement           go to state 36
    for_statement              go to state 37
    compound_statement         go to state 38
    assignment_statement       go to state 39
    json_assignment_statement  go to state 40
    list_assignment_statement  go to state 41
    if_statement               go to state 42
    if_part                    go to state 43
    return_statement           go to state 44


State 139

   29 switch_statement: _SWITCH $@4 _LPAREN _ID _RPAREN _LBRACKET case_statements default_statement _RBRACKET .

    $default  reduce using rule 29 (switch_statement)


State 140

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp . _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 143


State 141

   32 case_statement: _CASE literal _DOUBLEDOT statement . break

    _BREAK  shift, and go to state 72

    $default  reduce using rule 33 (break)

    break  go to state 144


State 142

   35 default_statement: _DEFAULT _DOUBLEDOT statement .

    $default  reduce using rule 35 (default_statement)


State 143

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON . _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _ID  shift, and go to state 145


State 144

   32 case_statement: _CASE literal _DOUBLEDOT statement break .

    $default  reduce using rule 32 (case_statement)


State 145

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID . @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 38 (@7)

    @7  go to state 146


State 146

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 . _INC _RPAREN _LBRACKET statement_list _RBRACKET

    _INC  shift, and go to state 147


State 147

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC . _RPAREN _LBRACKET statement_list _RBRACKET

    _RPAREN  shift, and go to state 148


State 148

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN . _LBRACKET statement_list _RBRACKET

    _LBRACKET  shift, and go to state 149


State 149

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 150


State 150

   14 statement_list: statement_list . statement
   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 151
    _FOR       shift, and go to state 28
    _DO        shift, and go to state 29
    _SWITCH    shift, and go to state 30
    _FOR_EACH  shift, and go to state 31

    statement                  go to state 32
    do_while_statement         go to state 33
    inc_statement              go to state 34
    for_each_statement         go to state 35
    switch_statement           go to state 36
    for_statement              go to state 37
    compound_statement         go to state 38
    assignment_statement       go to state 39
    json_assignment_statement  go to state 40
    list_assignment_statement  go to state 41
    if_statement               go to state 42
    if_part                    go to state 43
    return_statement           go to state 44


State 151

   39 for_statement: _FOR _LPAREN _TYPE _ID @5 _ASSIGN literal $@6 _SEMICOLON rel_exp _SEMICOLON _ID @7 _INC _RPAREN _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 39 (for_statement)
